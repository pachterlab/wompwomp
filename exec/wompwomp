#!/usr/bin/env Rscript

args <- commandArgs(trailingOnly = TRUE)

DEV_MODE <- "--dev" %in% args || tolower(Sys.getenv("WOMPWOMP_DEV_MODE")) == "true"  # True iff --dev is passed OR WOMPWOMP_DEV_MODE=true (case-insensitive)

download_missing_pkgs <- function() {
    # Install your package's runtime dependencies if missing
    required_pkgs <- c(
        "dplyr", "ggplot2", "ggforce", "ggalluvial", "igraph",
        "tibble", "rlang", "tidyr", "magrittr", "data.table"
    )
    
    missing <- required_pkgs[!vapply(required_pkgs, requireNamespace, quietly = TRUE, FUN.VALUE = logical(1))]
    if (length(missing) > 0) {
      msg <- paste("The following required packages are missing:\n  ",
                   paste(missing, collapse = ", "),
                   "\nInstall them now?")
      if (interactive()) {
        install <- askYesNo(msg)
        if (isTRUE(install)) {
          install.packages(missing, repos = "https://cloud.r-project.org")
        } else {
          stop(
            paste0(
                "Aborted. Please install the missing packages manually:\n",
                "Rscript -e 'install.packages(c(",
                paste0(sprintf('\"%s\"', missing), collapse = ", "),
                "))'\n"
            )
        )
    
        }
      } else {
        stop(
            paste0(
                "Missing packages: ", paste(missing, collapse = ", "), "\n",
                "To install them, run:\n",
                "Rscript install.R",
                "or",
                "Rscript -e 'install.packages(c(",
                paste0(sprintf('\"%s\"', missing), collapse = ", "),
                "))'\n"
            )
        )
      }
    }
}


# Install devtools if needed for active development
install_devtools <- function() {
    if (!requireNamespace("devtools", quietly = TRUE)) {
        if (interactive()) {
            install <- askYesNo("The 'devtools' package is required but not installed. Install it now?")
            if (isTRUE(install)) {
                install.packages("devtools", repos = "https://cloud.r-project.org")
            } else {
                stop("Aborted. Please install devtools manually with `conda install -c conda-forge r-devtools` (conda) or `Rscript -e \"install.packages(c('devtools'), repos='https://cloud.r-project.org')` (system R)\".")
            }
        } else {
            stop("The devtools package is required. Please install devtools manually with `conda install -c conda-forge r-devtools` (conda) or `Rscript -e \"install.packages(c('devtools'), repos='https://cloud.r-project.org')` (system R)\".")
        }
    }
}

if (DEV_MODE) {
    if (!requireNamespace("devtools", quietly = TRUE)) {
        install_devtools()
    }
    download_missing_pkgs()
    devtools::load_all(".")
} else {
    if (!requireNamespace("wompwomp", quietly = TRUE)) {
        if (interactive()) {
            install <- askYesNo("wompwomp is required but not installed. Install it now?")
            if (isTRUE(install)) {
                remotes::install_github('pachterlab/wompwomp')
            } else {
                stop("The wompwomp is not installed. Please install it with `Rscript -e \"remotes::install_github('pachterlab/wompwomp')\"`, or run `export WOMPWOMP_DEV_MODE=TRUE` (requires devtools)\".")
            }
        } else {
            stop("The wompwomp is not installed. Please install it with `Rscript -e \"remotes::install_github('pachterlab/wompwomp')\"`, or run `export WOMPWOMP_DEV_MODE=TRUE` (requires devtools)\".")
        }
    }
    # Use installed package (standard behavior during R CMD check or after install)
    library(wompwomp)
}


# Load the package from the local directory
args_full <- commandArgs(trailingOnly = FALSE)
script_path <- sub("^--file=", "", args_full[grep("^--file=", args_full)])
if (length(script_path) == 0) stop("Failed to detect script path.")
package_root <- dirname(dirname(script_path))
setwd(package_root)

# Set environment variable so downstream code can detect CLI mode
Sys.setenv(R_SCRIPT_FROM_CLI = "true")

sub_args <- args[-1]
environment <- get_arg(args, c("--environment"), default = "wompwomp_env")
use_conda <- store_false(args, c("--disable_use_conda"))
wompwomp::setup_python_env(environment, use_conda = use_conda)

wompwomp::run_cli(args)
